<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [THE_CLOCK_VER1.2\THE_CLOCK_VER1.2]</title></head>
<body><HR>
<H1>Static Call Graph for image THE_CLOCK_VER1.2\THE_CLOCK_VER1.2</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu May 11 18:25:56 2023
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; global_loop &rArr; global_ee &rArr; eeApp_handle_loop &rArr; eeApp_ds1307_write &rArr; ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[77]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1f]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ADC1_2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from stm32f1xx_it.o(i.BusFault_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[22]">CAN1_RX1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[23]">CAN1_SCE_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[19]">DMA1_Channel2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel5_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel6_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel7_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from stm32f1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[13]">EXTI0_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[35]">EXTI15_10_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[15]">EXTI2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[16]">EXTI3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[17]">EXTI4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[24]">EXTI9_5_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from stm32f1xx_it.o(i.HardFault_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from stm32f1xx_it.o(i.MemManage_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from stm32f1xx_it.o(i.NMI_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[e]">PVD_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from stm32f1xx_it.o(i.PendSV_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[36]">RTC_Alarm_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[31]">SPI2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from stm32f1xx_it.o(i.SVC_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from stm32f1xx_it.o(i.SysTick_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[38]">SystemInit</a> from system_stm32f1xx.o(i.SystemInit) referenced from startup_stm32f103xb.o(.text)
 <LI><a href="#[f]">TAMPER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[25]">TIM1_BRK_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[28]">TIM1_CC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[27]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[26]">TIM1_UP_IRQHandler</a> from stm32f1xx_it.o(i.TIM1_UP_IRQHandler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[29]">TIM2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2a]">TIM3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2b]">TIM4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[32]">USART1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[34]">USART3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[37]">USBWakeUp_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[20]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[21]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from stm32f1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[67]">__main</a> from __main.o(!!!main) referenced from startup_stm32f103xb.o(.text)
 <LI><a href="#[3e]">down_buttonApp_Fast</a> from button_app.o(i.down_buttonApp_Fast) referenced from button_app.o(i.buttonApp_init)
 <LI><a href="#[41]">down_buttonApp_Keep</a> from button_app.o(i.down_buttonApp_Keep) referenced from button_app.o(i.buttonApp_init)
 <LI><a href="#[40]">down_buttonApp_Long_Slow</a> from button_app.o(i.down_buttonApp_Long_Slow) referenced from button_app.o(i.buttonApp_init)
 <LI><a href="#[3f]">down_buttonApp_Slow</a> from button_app.o(i.down_buttonApp_Slow) referenced from button_app.o(i.buttonApp_init)
 <LI><a href="#[42]">lcdMenuApp_content_0</a> from lcd_menu_app.o(i.lcdMenuApp_content_0) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[43]">lcdMenuApp_content_1_1</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_1) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[47]">lcdMenuApp_content_1_1_1</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_1_1) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[57]">lcdMenuApp_content_1_1_1_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_1_1_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[48]">lcdMenuApp_content_1_1_2</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_1_2) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[58]">lcdMenuApp_content_1_1_2_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_1_2_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[49]">lcdMenuApp_content_1_1_3</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_1_3) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[59]">lcdMenuApp_content_1_1_3_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_1_3_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[4a]">lcdMenuApp_content_1_1_4</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_1_4) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[5a]">lcdMenuApp_content_1_1_4_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_1_4_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[44]">lcdMenuApp_content_1_2</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_2) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[4b]">lcdMenuApp_content_1_2_1</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_2_1) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[5b]">lcdMenuApp_content_1_2_1_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_2_1_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[4c]">lcdMenuApp_content_1_2_2</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_2_2) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[5c]">lcdMenuApp_content_1_2_2_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_2_2_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[4d]">lcdMenuApp_content_1_2_3</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_2_3) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[5d]">lcdMenuApp_content_1_2_3_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_2_3_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[4e]">lcdMenuApp_content_1_2_4</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_2_4) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[5e]">lcdMenuApp_content_1_2_4_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_2_4_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[45]">lcdMenuApp_content_1_3</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_3) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[4f]">lcdMenuApp_content_1_3_1</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_3_1) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[5f]">lcdMenuApp_content_1_3_1_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_3_1_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[50]">lcdMenuApp_content_1_3_2</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_3_2) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[60]">lcdMenuApp_content_1_3_2_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_3_2_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[51]">lcdMenuApp_content_1_3_3</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_3_3) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[61]">lcdMenuApp_content_1_3_3_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_3_3_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[52]">lcdMenuApp_content_1_3_4</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_3_4) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[62]">lcdMenuApp_content_1_3_4_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_3_4_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[46]">lcdMenuApp_content_1_4</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_4) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[53]">lcdMenuApp_content_1_4_1</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_4_1) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[63]">lcdMenuApp_content_1_4_1_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_4_1_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[54]">lcdMenuApp_content_1_4_2</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_4_2) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[64]">lcdMenuApp_content_1_4_2_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_4_2_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[55]">lcdMenuApp_content_1_4_3</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_4_3) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[65]">lcdMenuApp_content_1_4_3_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_4_3_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[56]">lcdMenuApp_content_1_4_4</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_4_4) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[66]">lcdMenuApp_content_1_4_4_choose</a> from lcd_menu_app.o(i.lcdMenuApp_content_1_4_4_choose) referenced from lcd_menu_app.o(i.lcdMenuApp_init)
 <LI><a href="#[3a]">up_buttonApp_Fast</a> from button_app.o(i.up_buttonApp_Fast) referenced from button_app.o(i.buttonApp_init)
 <LI><a href="#[3d]">up_buttonApp_Keep</a> from button_app.o(i.up_buttonApp_Keep) referenced from button_app.o(i.buttonApp_init)
 <LI><a href="#[3c]">up_buttonApp_Long_Slow</a> from button_app.o(i.up_buttonApp_Long_Slow) referenced from button_app.o(i.buttonApp_init)
 <LI><a href="#[3b]">up_buttonApp_Slow</a> from button_app.o(i.up_buttonApp_Slow) referenced from button_app.o(i.buttonApp_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[67]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[68]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[6a]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1ac]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1ad]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1ae]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[1af]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[1b0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[6e]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[1b1]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[1b2]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[1b3]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[1b4]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[1b5]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[1b6]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[1b7]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[1b8]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[1b9]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[1ba]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[1bb]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[1bc]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[1bd]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[1be]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[1bf]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[1c0]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[1c1]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[1c2]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[1c3]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1c4]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[1c5]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[73]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1c6]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[1c7]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[1c8]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1c9]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[1ca]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[1cb]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[1cc]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[69]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1cd]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[6b]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[6d]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1ce]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[6f]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; global_loop &rArr; global_ee &rArr; eeApp_handle_loop &rArr; eeApp_ds1307_write &rArr; ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1cf]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[78]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[72]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1d0]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[74]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f103xb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[f9]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_baudrate
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_pulse
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_24Mode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_alarm
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_state_conncet
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_data_send
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_data_receive
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_tempCur
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_edit_temp_set
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_edit_number_sensor
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_type_sensor
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307LcdApp_alarm_basic
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_time
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_date
</UL>

<P><STRONG><a name="[f8]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_baudrate
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_pulse
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_24Mode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_alarm
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_state_conncet
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_data_send
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_data_receive
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_tempCur
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_edit_temp_set
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_edit_number_sensor
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_type_sensor
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307LcdApp_alarm_basic
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_time
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_date
</UL>

<P><STRONG><a name="[1d1]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1d4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1d6]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1d8]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[71]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1da]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1db]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[1dc]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1dd]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>ADC_ConversionStop_Disable</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f1xx_hal_adc.o(i.ADC_ConversionStop_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_ConversionStop_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[7b]"></a>AlarmApp_turn_off</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, alarm_app.o(i.AlarmApp_turn_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AlarmApp_turn_off
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Fast
</UL>

<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DS1307_GetClockHalt</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ds1307.o(i.DS1307_GetClockHalt))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DS1307_GetClockHalt &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_second
</UL>

<P><STRONG><a name="[7e]"></a>DS1307_GetRegByte</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, ds1307.o(i.DS1307_GetRegByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_year
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_second
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_month
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_minute
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_hour
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_day_of_week
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_date
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetClockHalt
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetClockHalt
</UL>

<P><STRONG><a name="[81]"></a>DS1307_SetClockHalt</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ds1307.o(i.DS1307_SetClockHalt))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DS1307_SetClockHalt &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_init
</UL>

<P><STRONG><a name="[82]"></a>DS1307_SetRegByte</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ds1307.o(i.DS1307_SetRegByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DS1307_SetRegByte &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_year
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_second
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_month
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_minute
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_hour
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_day_of_week
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_day
</UL>

<P><STRONG><a name="[131]"></a>DS18B20_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ds18b20.o(i.DS18B20_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DS18B20_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[83]"></a>DS18B20_Read</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ds18b20.o(i.DS18B20_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DS18B20_Read &rArr; Set_Pin_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Pin_Output
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Pin_Input
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadTemp
</UL>

<P><STRONG><a name="[89]"></a>DS18B20_ReadTemp</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, ds18b20.o(i.DS18B20_ReadTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DS18B20_ReadTemp &rArr; DS18B20_Write &rArr; Set_Pin_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Write
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Start
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Read
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_dsTemp
</UL>

<P><STRONG><a name="[8a]"></a>DS18B20_Start</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, ds18b20.o(i.DS18B20_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DS18B20_Start &rArr; Set_Pin_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Pin_Output
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Pin_Input
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadTemp
</UL>

<P><STRONG><a name="[8b]"></a>DS18B20_Write</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ds18b20.o(i.DS18B20_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DS18B20_Write &rArr; Set_Pin_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Pin_Output
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Pin_Input
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadTemp
</UL>

<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, stm32f1xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[8e]"></a>HAL_ADC_Init</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, stm32f1xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConversionStop_Disable
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[8f]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, stm32f1xx_hal_msp.o(i.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[91]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_uart_read
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds18b20_read
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_read
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_read
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[90]"></a>HAL_GPIO_Init</STRONG> (Thumb, 446 bytes, Stack size 40 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Pin_Output
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Pin_Input
</UL>

<P><STRONG><a name="[88]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Start
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Read
</UL>

<P><STRONG><a name="[145]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_toggle
</UL>

<P><STRONG><a name="[86]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Write
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Start
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Read
</UL>

<P><STRONG><a name="[7a]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConversionStop_Disable
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_IsDeviceReady
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[92]"></a>HAL_I2C_Init</STRONG> (Thumb, 376 bytes, Stack size 16 bytes, stm32f1xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>HAL_I2C_IsDeviceReady</STRONG> (Thumb, 354 bytes, Stack size 56 bytes, stm32f1xx_hal_i2c.o(i.HAL_I2C_IsDeviceReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_I2C_IsDeviceReady &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_available
</UL>

<P><STRONG><a name="[80]"></a>HAL_I2C_Master_Receive</STRONG> (Thumb, 564 bytes, Stack size 40 bytes, stm32f1xx_hal_i2c.o(i.HAL_I2C_Master_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterRequestRead
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>

<P><STRONG><a name="[7f]"></a>HAL_I2C_Master_Transmit</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, stm32f1xx_hal_i2c.o(i.HAL_I2C_Master_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterRequestWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_data
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_cmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetRegByte
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>

<P><STRONG><a name="[9c]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 574 bytes, Stack size 64 bytes, stm32f1xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_read
</UL>

<P><STRONG><a name="[9e]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 294 bytes, Stack size 64 bytes, stm32f1xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_write
</UL>

<P><STRONG><a name="[93]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, stm32f1xx_hal_msp.o(i.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[d0]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[a0]"></a>HAL_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[a3]"></a>HAL_MspInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f1xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[ae]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>

<P><STRONG><a name="[a5]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[a1]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[a7]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a8]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[94]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[d3]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[a9]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[aa]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 778 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a4]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[b9]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[bb]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f1xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[ab]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[ac]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f1xx_hal_msp.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[140]"></a>HAL_TIM_Base_Start</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_Base_Start))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[13f]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[af]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[b5]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; button_check_press_interrupt &rArr; button_press
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_IRQHandler
</UL>

<P><STRONG><a name="[b6]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[b7]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[b8]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, global.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_PeriodElapsedCallback &rArr; button_check_press_interrupt &rArr; button_press
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_toggle
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_call_blink_interrupt
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzerLedApp_but_noti_inter
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_check_press_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[ba]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>HAL_UART_MspInit</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, stm32f1xx_hal_msp.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[c3]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[c5]"></a>HAL_UART_Transmit</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>Set_Pin_Input</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ds18b20.o(i.Set_Pin_Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Set_Pin_Input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Write
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Start
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Read
</UL>

<P><STRONG><a name="[85]"></a>Set_Pin_Output</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, ds18b20.o(i.Set_Pin_Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Set_Pin_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Write
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Start
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Read
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[d1]"></a>SystemClock_Config</STRONG> (Thumb, 120 bytes, Stack size 88 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.TIM1_UP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM1_UP_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; button_check_press_interrupt &rArr; button_press
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, stm32f1xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[b0]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[c4]"></a>UART_Start_Receive_IT</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.UART_Start_Receive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>

<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>alarmApp_handle_loop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, alarm_app.o(i.alarmApp_handle_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = alarmApp_handle_loop &rArr; alarmApp_find
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmApp_find
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_ds1307
</UL>

<P><STRONG><a name="[13c]"></a>alarmApp_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, alarm_app.o(i.alarmApp_init))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[d7]"></a>alarm_button_decre_fast</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ds1307_button_app.o(i.alarm_button_decre_fast))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_update_decre
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_buttonApp_Fast
</UL>

<P><STRONG><a name="[d9]"></a>alarm_button_incre_fast</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ds1307_button_app.o(i.alarm_button_incre_fast))
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_update_incre
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Fast
</UL>

<P><STRONG><a name="[1a2]"></a>alarm_button_slow</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, ds1307_button_app.o(i.alarm_button_slow))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Slow
</UL>

<P><STRONG><a name="[df]"></a>buttonApp_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, button_app.o(i.buttonApp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = buttonApp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_button_set_handle_slow
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_button_set_handle_long_slow
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_button_set_handle_keep
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_button_set_handle_fast
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_button_set_handle_slow
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_button_set_handle_long_slow
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_button_set_handle_keep
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_button_set_handle_fast
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[bd]"></a>button_check_press_interrupt</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, button.o(i.button_check_press_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = button_check_press_interrupt &rArr; button_press
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_release_slow
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_release_long_slow
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_release_fast
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_press
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_notify
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_keep
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[134]"></a>button_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, button.o(i.button_init))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[ed]"></a>button_keep</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button.o(i.button_keep))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_check_press_interrupt
</UL>

<P><STRONG><a name="[ee]"></a>button_notify</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, button.o(i.button_notify))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_check_press_interrupt
</UL>

<P><STRONG><a name="[e9]"></a>button_press</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, button.o(i.button_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = button_press
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_check_press_interrupt
</UL>

<P><STRONG><a name="[ea]"></a>button_release_fast</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, button.o(i.button_release_fast))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_check_press_interrupt
</UL>

<P><STRONG><a name="[ec]"></a>button_release_long_slow</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, button.o(i.button_release_long_slow))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_check_press_interrupt
</UL>

<P><STRONG><a name="[eb]"></a>button_release_slow</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, button.o(i.button_release_slow))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_check_press_interrupt
</UL>

<P><STRONG><a name="[be]"></a>buzzerLedApp_but_noti_inter</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, buzzer_led_app.o(i.buzzerLedApp_but_noti_inter))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_set_number_call
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[bf]"></a>buzzer_call_blink_interrupt</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, buzzer.o(i.buzzer_call_blink_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = buzzer_call_blink_interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_write
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[ef]"></a>buzzer_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, buzzer.o(i.buzzer_init))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_write
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[d5]"></a>buzzer_set_number_call</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, buzzer.o(i.buzzer_set_number_call))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmApp_find
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzerLedApp_but_noti_inter
</UL>

<P><STRONG><a name="[7c]"></a>buzzer_write</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, buzzer.o(i.buzzer_write))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmApp_turn_off
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_call_blink_interrupt
</UL>

<P><STRONG><a name="[182]"></a>content_1_1_choose</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd_menu.o(i.content_1_1_choose))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_2
</UL>

<P><STRONG><a name="[186]"></a>content_1_1_display</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd_menu.o(i.content_1_1_display))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_3
</UL>

<P><STRONG><a name="[183]"></a>content_1_2_choose</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd_menu.o(i.content_1_2_choose))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_2
</UL>

<P><STRONG><a name="[187]"></a>content_1_2_display</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd_menu.o(i.content_1_2_display))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_3
</UL>

<P><STRONG><a name="[184]"></a>content_1_3_choose</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd_menu.o(i.content_1_3_choose))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_2
</UL>

<P><STRONG><a name="[188]"></a>content_1_3_display</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd_menu.o(i.content_1_3_display))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_3
</UL>

<P><STRONG><a name="[185]"></a>content_1_4_choose</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd_menu.o(i.content_1_4_choose))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_2
</UL>

<P><STRONG><a name="[189]"></a>content_1_4_display</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lcd_menu.o(i.content_1_4_display))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_3
</UL>

<P><STRONG><a name="[87]"></a>delay</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ds18b20.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Write
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Start
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Read
</UL>

<P><STRONG><a name="[3e]"></a>down_buttonApp_Fast</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, button_app.o(i.down_buttonApp_Fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = down_buttonApp_Fast &rArr; rtc_button_decre_fast
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_button_decre_fast
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_button_decre_fast
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_button_decre_fast
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_set_down
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_button_decre_fast
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_app.o(i.buttonApp_init)
</UL>
<P><STRONG><a name="[41]"></a>down_buttonApp_Keep</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, button_app.o(i.down_buttonApp_Keep))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_back_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_app.o(i.buttonApp_init)
</UL>
<P><STRONG><a name="[40]"></a>down_buttonApp_Long_Slow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_app.o(i.down_buttonApp_Long_Slow))
<BR>[Address Reference Count : 1]<UL><LI> button_app.o(i.buttonApp_init)
</UL>
<P><STRONG><a name="[3f]"></a>down_buttonApp_Slow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, button_app.o(i.down_buttonApp_Slow))
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_set_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_app.o(i.buttonApp_init)
</UL>
<P><STRONG><a name="[12b]"></a>down_button_handle_loop</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, button.o(i.down_button_handle_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = down_button_handle_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_button
</UL>

<P><STRONG><a name="[e4]"></a>down_button_set_handle_fast</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(i.down_button_set_handle_fast))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonApp_init
</UL>

<P><STRONG><a name="[e7]"></a>down_button_set_handle_keep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(i.down_button_set_handle_keep))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonApp_init
</UL>

<P><STRONG><a name="[e6]"></a>down_button_set_handle_long_slow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(i.down_button_set_handle_long_slow))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonApp_init
</UL>

<P><STRONG><a name="[e5]"></a>down_button_set_handle_slow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(i.down_button_set_handle_slow))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonApp_init
</UL>

<P><STRONG><a name="[13b]"></a>ds1307App_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ds1307_lcd_app.o(i.ds1307App_init))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[fd]"></a>ds1307App_lcd_edit_24Mode</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_edit_24Mode))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_24Mode
</UL>

<P><STRONG><a name="[104]"></a>ds1307App_lcd_edit_date</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_edit_date))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_date
</UL>

<P><STRONG><a name="[107]"></a>ds1307App_lcd_edit_pulse</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_edit_pulse))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_pulse
</UL>

<P><STRONG><a name="[10a]"></a>ds1307App_lcd_edit_time</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_edit_time))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_time
</UL>

<P><STRONG><a name="[f7]"></a>ds1307App_lcd_update_24Mode</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_24Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ds1307App_lcd_update_24Mode &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_24Mode
</UL>

<P><STRONG><a name="[fb]"></a>ds1307App_lcd_update_date</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ds1307App_lcd_update_date &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_date
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_0
</UL>

<P><STRONG><a name="[fc]"></a>ds1307App_lcd_update_edit_24Mode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_edit_24Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ds1307App_lcd_update_edit_24Mode &rArr; ds1307App_lcd_update_24Mode &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_24Mode
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_edit_24Mode
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_3_choose
</UL>

<P><STRONG><a name="[fe]"></a>ds1307App_lcd_update_edit_alarm_1</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_edit_alarm_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ds1307App_lcd_update_edit_alarm_1 &rArr; ds1307App_lcd_update_alarm &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_alarm
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_edit_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_1_choose
</UL>

<P><STRONG><a name="[100]"></a>ds1307App_lcd_update_edit_alarm_2</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_edit_alarm_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ds1307App_lcd_update_edit_alarm_2 &rArr; ds1307App_lcd_update_alarm &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_alarm
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_edit_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_2_choose
</UL>

<P><STRONG><a name="[101]"></a>ds1307App_lcd_update_edit_alarm_3</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_edit_alarm_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ds1307App_lcd_update_edit_alarm_3 &rArr; ds1307App_lcd_update_alarm &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_alarm
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_edit_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_3_choose
</UL>

<P><STRONG><a name="[102]"></a>ds1307App_lcd_update_edit_alarm_4</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_edit_alarm_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ds1307App_lcd_update_edit_alarm_4 &rArr; ds1307App_lcd_update_alarm &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_alarm
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_edit_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_4_choose
</UL>

<P><STRONG><a name="[103]"></a>ds1307App_lcd_update_edit_date</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_edit_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ds1307App_lcd_update_edit_date &rArr; ds1307App_lcd_update_date &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_edit_date
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_date
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_2_choose
</UL>

<P><STRONG><a name="[105]"></a>ds1307App_lcd_update_edit_pulse</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_edit_pulse))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ds1307App_lcd_update_edit_pulse &rArr; ds1307App_lcd_update_pulse &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_pulse
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_edit_pulse
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_4_choose
</UL>

<P><STRONG><a name="[108]"></a>ds1307App_lcd_update_edit_time</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_edit_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ds1307App_lcd_update_edit_time &rArr; ds1307App_lcd_update_time &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_edit_time
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_time
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_1_choose
</UL>

<P><STRONG><a name="[106]"></a>ds1307App_lcd_update_pulse</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_pulse))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ds1307App_lcd_update_pulse &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_pulse
</UL>

<P><STRONG><a name="[109]"></a>ds1307App_lcd_update_time</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ds1307App_lcd_update_time &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_time
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_0
</UL>

<P><STRONG><a name="[10b]"></a>ds1307LcdApp_alarm_basic</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, ds1307_lcd_app.o(i.ds1307LcdApp_alarm_basic))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ds1307LcdApp_alarm_basic &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_0
</UL>

<P><STRONG><a name="[10c]"></a>ds1307_get_all</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_get_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ds1307_get_all &rArr; ds1307_get_year &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_year
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_second
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_month
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_minute
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_hour
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_day_of_week
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_date
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_ds1307
</UL>

<P><STRONG><a name="[111]"></a>ds1307_get_date</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_get_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ds1307_get_date &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_DecodeBCD
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_all
</UL>

<P><STRONG><a name="[110]"></a>ds1307_get_day_of_week</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_get_day_of_week))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ds1307_get_day_of_week &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_DecodeBCD
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_all
</UL>

<P><STRONG><a name="[10f]"></a>ds1307_get_hour</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_get_hour))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ds1307_get_hour &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_DecodeBCD
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_all
</UL>

<P><STRONG><a name="[10e]"></a>ds1307_get_minute</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_get_minute))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ds1307_get_minute &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_DecodeBCD
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_all
</UL>

<P><STRONG><a name="[112]"></a>ds1307_get_month</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_get_month))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ds1307_get_month &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_DecodeBCD
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_all
</UL>

<P><STRONG><a name="[10d]"></a>ds1307_get_second</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_get_second))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ds1307_get_second &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_DecodeBCD
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_all
</UL>

<P><STRONG><a name="[113]"></a>ds1307_get_year</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_get_year))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ds1307_get_year &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_DecodeBCD
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_all
</UL>

<P><STRONG><a name="[115]"></a>ds1307_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ds1307.o(i.ds1307_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ds1307_init &rArr; DS1307_SetClockHalt &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetClockHalt
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[116]"></a>ds1307_set_day</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_set_day))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ds1307_set_day &rArr; DS1307_SetRegByte &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_EncodeBCD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_write
</UL>

<P><STRONG><a name="[118]"></a>ds1307_set_day_of_week</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_set_day_of_week))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ds1307_set_day_of_week &rArr; DS1307_SetRegByte &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_EncodeBCD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_write
</UL>

<P><STRONG><a name="[119]"></a>ds1307_set_hour</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_set_hour))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ds1307_set_hour &rArr; DS1307_SetRegByte &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_EncodeBCD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_write
</UL>

<P><STRONG><a name="[11a]"></a>ds1307_set_minute</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_set_minute))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ds1307_set_minute &rArr; DS1307_SetRegByte &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_EncodeBCD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_write
</UL>

<P><STRONG><a name="[11b]"></a>ds1307_set_month</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_set_month))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ds1307_set_month &rArr; DS1307_SetRegByte &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_EncodeBCD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_write
</UL>

<P><STRONG><a name="[11c]"></a>ds1307_set_second</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ds1307.o(i.ds1307_set_second))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ds1307_set_second &rArr; DS1307_GetClockHalt &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_EncodeBCD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetRegByte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_GetClockHalt
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_write
</UL>

<P><STRONG><a name="[11d]"></a>ds1307_set_year</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ds1307.o(i.ds1307_set_year))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ds1307_set_year &rArr; DS1307_SetRegByte &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_EncodeBCD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1307_SetRegByte
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_write
</UL>

<P><STRONG><a name="[11e]"></a>ee24_available</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ee.o(i.ee24_available))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ee24_available &rArr; HAL_I2C_IsDeviceReady &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_IsDeviceReady
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[13d]"></a>ee24_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ee.o(i.ee24_init))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[dc]"></a>ee24_read</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ee.o(i.ee24_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ee24_read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_uart_read
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds18b20_read
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_read
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_read
</UL>

<P><STRONG><a name="[11f]"></a>ee24_write</STRONG> (Thumb, 128 bytes, Stack size 64 bytes, ee.o(i.ee24_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_uart_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds18b20_write
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_write
</UL>

<P><STRONG><a name="[120]"></a>eeApp_alarm_read</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, ee_app.o(i.eeApp_alarm_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = eeApp_alarm_read &rArr; alarm_read &rArr; ee24_read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_read
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_start
</UL>

<P><STRONG><a name="[121]"></a>eeApp_ds1307_read</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ee_app.o(i.eeApp_ds1307_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = eeApp_ds1307_read &rArr; ee24_read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_read
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_start
</UL>

<P><STRONG><a name="[122]"></a>eeApp_ds1307_write</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, ee_app.o(i.eeApp_ds1307_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = eeApp_ds1307_write &rArr; ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_write
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_year
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_second
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_month
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_minute
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_hour
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_day_of_week
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_day
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_handle_loop
</UL>

<P><STRONG><a name="[123]"></a>eeApp_ds18b20_read</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ee_app.o(i.eeApp_ds18b20_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = eeApp_ds18b20_read &rArr; ee24_read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_read
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_start
</UL>

<P><STRONG><a name="[124]"></a>eeApp_ds18b20_write</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ee_app.o(i.eeApp_ds18b20_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = eeApp_ds18b20_write &rArr; ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_write
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_handle_loop
</UL>

<P><STRONG><a name="[125]"></a>eeApp_handle_loop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ee_app.o(i.eeApp_handle_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = eeApp_handle_loop &rArr; eeApp_ds1307_write &rArr; ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_uart_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds18b20_write
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_write
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_ee
</UL>

<P><STRONG><a name="[13e]"></a>eeApp_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ee_app.o(i.eeApp_init))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[127]"></a>eeApp_start</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ee_app.o(i.eeApp_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = eeApp_start &rArr; eeApp_alarm_read &rArr; alarm_read &rArr; ee24_read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_uart_read
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds18b20_read
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_ds1307_read
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_alarm_read
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[128]"></a>eeApp_uart_read</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ee_app.o(i.eeApp_uart_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = eeApp_uart_read &rArr; ee24_read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_read
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_start
</UL>

<P><STRONG><a name="[126]"></a>eeApp_uart_write</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ee_app.o(i.eeApp_uart_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = eeApp_uart_write &rArr; ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_write
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_handle_loop
</UL>

<P><STRONG><a name="[129]"></a>global_button</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, global.o(i.global_button))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = global_button &rArr; up_button_handle_loop
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_button_handle_loop
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_button_handle_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_loop
</UL>

<P><STRONG><a name="[12c]"></a>global_ds1307</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, global.o(i.global_ds1307))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = global_ds1307 &rArr; ds1307_get_all &rArr; ds1307_get_year &rArr; DS1307_GetRegByte &rArr; HAL_I2C_Master_Receive &rArr; I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_all
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmApp_handle_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_loop
</UL>

<P><STRONG><a name="[12d]"></a>global_dsTemp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, global.o(i.global_dsTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = global_dsTemp &rArr; DS18B20_ReadTemp &rArr; DS18B20_Write &rArr; Set_Pin_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadTemp
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_loop
</UL>

<P><STRONG><a name="[12e]"></a>global_ee</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, global.o(i.global_ee))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = global_ee &rArr; eeApp_handle_loop &rArr; eeApp_ds1307_write &rArr; ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_handle_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_loop
</UL>

<P><STRONG><a name="[12f]"></a>global_init</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, global.o(i.global_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = global_init &rArr; eeApp_start &rArr; eeApp_alarm_read &rArr; alarm_read &rArr; ee24_read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_string_goto_xy
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_start
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_available
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonApp_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmApp_init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_start
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[141]"></a>global_lcd</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, global.o(i.global_lcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = global_lcd &rArr; lcdMenu_handle_loop &rArr; lcdMenu_display &rArr; lcd_send_string_goto_xy &rArr; lcd_send_string &rArr; lcd_send_data &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_handle_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_loop
</UL>

<P><STRONG><a name="[143]"></a>global_loop</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, global.o(i.global_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = global_loop &rArr; global_ee &rArr; eeApp_handle_loop &rArr; eeApp_ds1307_write &rArr; ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_lcd
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_ee
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_dsTemp
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_ds1307
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_button
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[130]"></a>global_start</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, global.o(i.global_start))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[e8]"></a>gpio_read</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_stm32.o(i.gpio_read))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_check_press_interrupt
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_press
</UL>

<P><STRONG><a name="[144]"></a>gpio_toggle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_stm32.o(i.gpio_toggle))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_toggle
</UL>

<P><STRONG><a name="[f0]"></a>gpio_write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_stm32.o(i.gpio_write))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_write
</UL>

<P><STRONG><a name="[42]"></a>lcdMenuApp_content_0</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, lcd_menu_app.o(i.lcdMenuApp_content_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = lcdMenuApp_content_0 &rArr; ds1307LcdApp_alarm_basic &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_basic_tempCur
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_3
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307LcdApp_alarm_basic
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_time
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[43]"></a>lcdMenuApp_content_1_1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_1 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[47]"></a>lcdMenuApp_content_1_1_1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_1_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_1_1 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[57]"></a>lcdMenuApp_content_1_1_1_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_1_1_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lcdMenuApp_content_1_1_1_choose &rArr; ds1307App_lcd_update_edit_time &rArr; ds1307App_lcd_update_time &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[48]"></a>lcdMenuApp_content_1_1_2</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_1_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_1_2 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[58]"></a>lcdMenuApp_content_1_1_2_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_1_2_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lcdMenuApp_content_1_1_2_choose &rArr; ds1307App_lcd_update_edit_date &rArr; ds1307App_lcd_update_date &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[49]"></a>lcdMenuApp_content_1_1_3</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_1_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_1_3 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[59]"></a>lcdMenuApp_content_1_1_3_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_1_3_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lcdMenuApp_content_1_1_3_choose &rArr; ds1307App_lcd_update_edit_24Mode &rArr; ds1307App_lcd_update_24Mode &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_24Mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[4a]"></a>lcdMenuApp_content_1_1_4</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_1_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_1_4 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[5a]"></a>lcdMenuApp_content_1_1_4_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_1_4_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lcdMenuApp_content_1_1_4_choose &rArr; ds1307App_lcd_update_edit_pulse &rArr; ds1307App_lcd_update_pulse &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_pulse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[44]"></a>lcdMenuApp_content_1_2</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_2 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[4b]"></a>lcdMenuApp_content_1_2_1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_2_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_2_1 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[5b]"></a>lcdMenuApp_content_1_2_1_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_2_1_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lcdMenuApp_content_1_2_1_choose &rArr; ds1307App_lcd_update_edit_alarm_1 &rArr; ds1307App_lcd_update_alarm &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[4c]"></a>lcdMenuApp_content_1_2_2</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_2_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_2_2 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[5c]"></a>lcdMenuApp_content_1_2_2_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_2_2_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lcdMenuApp_content_1_2_2_choose &rArr; ds1307App_lcd_update_edit_alarm_2 &rArr; ds1307App_lcd_update_alarm &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[4d]"></a>lcdMenuApp_content_1_2_3</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_2_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_2_3 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[5d]"></a>lcdMenuApp_content_1_2_3_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_2_3_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lcdMenuApp_content_1_2_3_choose &rArr; ds1307App_lcd_update_edit_alarm_3 &rArr; ds1307App_lcd_update_alarm &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[4e]"></a>lcdMenuApp_content_1_2_4</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_2_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_2_4 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[5e]"></a>lcdMenuApp_content_1_2_4_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_2_4_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lcdMenuApp_content_1_2_4_choose &rArr; ds1307App_lcd_update_edit_alarm_4 &rArr; ds1307App_lcd_update_alarm &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[45]"></a>lcdMenuApp_content_1_3</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_3 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[4f]"></a>lcdMenuApp_content_1_3_1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_3_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_3_1 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[5f]"></a>lcdMenuApp_content_1_3_1_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_3_1_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lcdMenuApp_content_1_3_1_choose &rArr; tempLcdApp_update_tempCur &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_tempCur
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[50]"></a>lcdMenuApp_content_1_3_2</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_3_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_3_2 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[60]"></a>lcdMenuApp_content_1_3_2_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_3_2_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lcdMenuApp_content_1_3_2_choose &rArr; tempLcdApp_update_edit_temp_set &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_edit_temp_set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[51]"></a>lcdMenuApp_content_1_3_3</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_3_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_3_3 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[61]"></a>lcdMenuApp_content_1_3_3_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_3_3_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lcdMenuApp_content_1_3_3_choose &rArr; tempLcdApp_type_sensor &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_type_sensor
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[52]"></a>lcdMenuApp_content_1_3_4</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_3_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_3_4 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[62]"></a>lcdMenuApp_content_1_3_4_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_3_4_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lcdMenuApp_content_1_3_4_choose &rArr; tempLcdApp_update_edit_number_sensor &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_edit_number_sensor
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[46]"></a>lcdMenuApp_content_1_4</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_4 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[53]"></a>lcdMenuApp_content_1_4_1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_4_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_4_1 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[63]"></a>lcdMenuApp_content_1_4_1_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_4_1_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lcdMenuApp_content_1_4_1_choose &rArr; uartLcdApp_update_data_receive &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_data_receive
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[54]"></a>lcdMenuApp_content_1_4_2</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_4_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_4_2 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[64]"></a>lcdMenuApp_content_1_4_2_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_4_2_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lcdMenuApp_content_1_4_2_choose &rArr; uartLcdApp_update_data_send &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_data_send
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[55]"></a>lcdMenuApp_content_1_4_3</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_4_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_4_3 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[65]"></a>lcdMenuApp_content_1_4_3_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_4_3_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lcdMenuApp_content_1_4_3_choose &rArr; uartLcdApp_update_state_conncet &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_state_conncet
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[56]"></a>lcdMenuApp_content_1_4_4</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_4_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcdMenuApp_content_1_4_4 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[66]"></a>lcdMenuApp_content_1_4_4_choose</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_menu_app.o(i.lcdMenuApp_content_1_4_4_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = lcdMenuApp_content_1_4_4_choose &rArr; uartLcdApp_edit_update_baudrate &rArr; uartLcdApp_update_baudrate &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_edit_update_baudrate
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_menu_app.o(i.lcdMenuApp_init)
</UL>
<P><STRONG><a name="[13a]"></a>lcdMenuApp_init</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, lcd_menu_app.o(i.lcdMenuApp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcdMenuApp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_4_4_choose
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_4_4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_4_3_choose
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_4_3
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_4_2_choose
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_4_2
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_4_1_choose
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_4_1
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_3_4_choose
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_3_4
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_3_3_choose
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_3_3
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_3_2_choose
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_3_2
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_3_1_choose
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_3_1
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_2_4_choose
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_2_4
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_2_3_choose
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_2_3
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_2_2_choose
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_2_2
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_2_1_choose
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_2_1
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_1_4_choose
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_1_4
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_1_3_choose
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_1_3
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_1_2_choose
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_1_2
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_1_1_choose
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledMenu_set_content_1_1_1
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_set_content_1_4
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_set_content_1_3
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_set_content_1_2
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_set_content_1_1
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_set_content_0
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[f5]"></a>lcdMenu_back_main</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_back_main))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_buttonApp_Keep
</UL>

<P><STRONG><a name="[146]"></a>lcdMenu_change_row_1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_change_row_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcdMenu_change_row_1 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_4_choose
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_4
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_3_choose
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_3
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_2_choose
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_2
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_1_choose
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_1
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_4_choose
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_4
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_3_choose
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_3
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_2_choose
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_2
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_1_choose
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_1
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_4_choose
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_4
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_3_choose
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_3
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_2_choose
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_2
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_1_choose
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_1
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_4_choose
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_4
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_3_choose
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_3
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_2_choose
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_1_choose
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_1
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_0
</UL>

<P><STRONG><a name="[147]"></a>lcdMenu_change_row_2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_change_row_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcdMenu_change_row_2 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_2
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_4
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_3
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_2
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_1
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_4
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_3
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_2
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_1
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_4
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_3
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_2
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_1
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_4
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_3
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_2
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_1
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_0
</UL>

<P><STRONG><a name="[14b]"></a>lcdMenu_change_row_3</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_change_row_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcdMenu_change_row_3 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_3
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_4_choose
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_4
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_3_choose
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_3
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_2_choose
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_2
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_1_choose
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_1
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_4_choose
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_4
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_3_choose
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_3
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_2_choose
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_2
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_1_choose
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_1
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_4_choose
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_4
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_3_choose
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_3
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_2_choose
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_2
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_1_choose
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_1
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_4_choose
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_4
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_3_choose
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_3
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_2_choose
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_1_choose
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_1
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1
</UL>

<P><STRONG><a name="[14a]"></a>lcdMenu_change_row_4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_change_row_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_delete_row_4
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_4
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_3
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_2
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_1
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_4
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_3
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_2
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_1
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_4
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_3
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_2
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_1
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_4
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_3
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_2
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_1
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_0
</UL>

<P><STRONG><a name="[18b]"></a>lcdMenu_check_back</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_check_back))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_move
</UL>

<P><STRONG><a name="[18a]"></a>lcdMenu_check_choose</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_check_choose))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_move
</UL>

<P><STRONG><a name="[18d]"></a>lcdMenu_check_down</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_check_down))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_move
</UL>

<P><STRONG><a name="[18c]"></a>lcdMenu_check_up</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_check_up))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_move
</UL>

<P><STRONG><a name="[14c]"></a>lcdMenu_delete_row_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_delete_row_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcdMenu_delete_row_2 &rArr; lcdMenu_change_row_2 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_2
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_4_choose
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_3_choose
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_2_choose
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_1_choose
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_4_choose
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_3_choose
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_2_choose
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_1_choose
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_4_choose
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_3_choose
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_2_choose
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_1_choose
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_4_choose
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_3_choose
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_2_choose
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_1_choose
</UL>

<P><STRONG><a name="[148]"></a>lcdMenu_delete_row_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_delete_row_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcdMenu_delete_row_3 &rArr; lcdMenu_change_row_3 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_3
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_0
</UL>

<P><STRONG><a name="[14d]"></a>lcdMenu_delete_row_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_delete_row_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcdMenu_delete_row_4 &rArr; lcdMenu_change_row_4 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_change_row_4
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_4_choose
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_3_choose
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_2_choose
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_1_choose
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_4_choose
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_3_choose
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_2_choose
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_1_choose
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_4_choose
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_3_choose
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_2_choose
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_2_1_choose
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_4_choose
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_3_choose
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_2_choose
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_1_1_choose
</UL>

<P><STRONG><a name="[17b]"></a>lcdMenu_display</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lcd_menu.o(i.lcdMenu_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lcdMenu_display &rArr; lcd_send_string_goto_xy &rArr; lcd_send_string &rArr; lcd_send_data &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_string_goto_xy
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_handle_loop
</UL>

<P><STRONG><a name="[142]"></a>lcdMenu_handle_loop</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_menu.o(i.lcdMenu_handle_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lcdMenu_handle_loop &rArr; lcdMenu_display &rArr; lcd_send_string_goto_xy &rArr; lcd_send_string &rArr; lcd_send_data &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_move
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_3
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_2
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_1
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_level_0
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_display
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_lcd
</UL>

<P><STRONG><a name="[139]"></a>lcdMenu_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_init))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_start
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[17d]"></a>lcdMenu_level_0</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_level_0))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_handle_loop
</UL>

<P><STRONG><a name="[17e]"></a>lcdMenu_level_1</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_level_1))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_handle_loop
</UL>

<P><STRONG><a name="[17f]"></a>lcdMenu_level_2</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lcd_menu.o(i.lcdMenu_level_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcdMenu_level_2
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;content_1_4_choose
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;content_1_3_choose
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;content_1_2_choose
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;content_1_1_choose
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_handle_loop
</UL>

<P><STRONG><a name="[180]"></a>lcdMenu_level_3</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lcd_menu.o(i.lcdMenu_level_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcdMenu_level_3
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;content_1_4_display
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;content_1_3_display
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;content_1_2_display
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;content_1_1_display
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_handle_loop
</UL>

<P><STRONG><a name="[17c]"></a>lcdMenu_move</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, lcd_menu.o(i.lcdMenu_move))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lcdMenu_move
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_check_up
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_check_down
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_check_choose
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_check_back
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_handle_loop
</UL>

<P><STRONG><a name="[f6]"></a>lcdMenu_set_back</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_set_back))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_buttonApp_Slow
</UL>

<P><STRONG><a name="[1a0]"></a>lcdMenu_set_choose</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_set_choose))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Slow
</UL>

<P><STRONG><a name="[156]"></a>lcdMenu_set_content_0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_set_content_0))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[157]"></a>lcdMenu_set_content_1_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_set_content_1_1))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[158]"></a>lcdMenu_set_content_1_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_set_content_1_2))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[159]"></a>lcdMenu_set_content_1_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_set_content_1_3))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[15a]"></a>lcdMenu_set_content_1_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_set_content_1_4))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[f1]"></a>lcdMenu_set_down</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_set_down))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_buttonApp_Fast
</UL>

<P><STRONG><a name="[19e]"></a>lcdMenu_set_up</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_set_up))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Fast
</UL>

<P><STRONG><a name="[181]"></a>lcdMenu_start</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcd_menu.o(i.lcdMenu_start))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_init
</UL>

<P><STRONG><a name="[18e]"></a>lcd_goto_xy</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lcd.o(i.lcd_goto_xy))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lcd_goto_xy &rArr; lcd_send_cmd &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_string_goto_xy
</UL>

<P><STRONG><a name="[137]"></a>lcd_init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, lcd.o(i.lcd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lcd_init &rArr; lcd_send_cmd &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[191]"></a>lcd_send_string</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcd.o(i.lcd_send_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lcd_send_string &rArr; lcd_send_data &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_string_goto_xy
</UL>

<P><STRONG><a name="[138]"></a>lcd_send_string_goto_xy</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd.o(i.lcd_send_string_goto_xy))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lcd_send_string_goto_xy &rArr; lcd_send_string &rArr; lcd_send_data &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_string
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_goto_xy
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_display
</UL>

<P><STRONG><a name="[15b]"></a>ledMenu_set_content_1_1_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_1_1))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[16b]"></a>ledMenu_set_content_1_1_1_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_1_1_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[15c]"></a>ledMenu_set_content_1_1_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_1_2))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[16c]"></a>ledMenu_set_content_1_1_2_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_1_2_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[15d]"></a>ledMenu_set_content_1_1_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_1_3))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[16d]"></a>ledMenu_set_content_1_1_3_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_1_3_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[15e]"></a>ledMenu_set_content_1_1_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_1_4))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[16e]"></a>ledMenu_set_content_1_1_4_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_1_4_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[15f]"></a>ledMenu_set_content_1_2_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_2_1))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[16f]"></a>ledMenu_set_content_1_2_1_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_2_1_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[160]"></a>ledMenu_set_content_1_2_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_2_2))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[170]"></a>ledMenu_set_content_1_2_2_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_2_2_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[161]"></a>ledMenu_set_content_1_2_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_2_3))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[171]"></a>ledMenu_set_content_1_2_3_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_2_3_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[162]"></a>ledMenu_set_content_1_2_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_2_4))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[172]"></a>ledMenu_set_content_1_2_4_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_2_4_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[163]"></a>ledMenu_set_content_1_3_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_3_1))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[173]"></a>ledMenu_set_content_1_3_1_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_3_1_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[164]"></a>ledMenu_set_content_1_3_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_3_2))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[174]"></a>ledMenu_set_content_1_3_2_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_3_2_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[165]"></a>ledMenu_set_content_1_3_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_3_3))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[175]"></a>ledMenu_set_content_1_3_3_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_3_3_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[166]"></a>ledMenu_set_content_1_3_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_3_4))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[176]"></a>ledMenu_set_content_1_3_4_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_3_4_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[167]"></a>ledMenu_set_content_1_4_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_4_1))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[177]"></a>ledMenu_set_content_1_4_1_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_4_1_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[168]"></a>ledMenu_set_content_1_4_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_4_2))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[178]"></a>ledMenu_set_content_1_4_2_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_4_2_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[169]"></a>ledMenu_set_content_1_4_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_4_3))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[179]"></a>ledMenu_set_content_1_4_3_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_4_3_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[16a]"></a>ledMenu_set_content_1_4_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_4_4))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[17a]"></a>ledMenu_set_content_1_4_4_choose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_menu.o(i.ledMenu_set_content_1_4_4_choose))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_init
</UL>

<P><STRONG><a name="[133]"></a>led_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(i.led_init))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[bc]"></a>led_toggle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, led.o(i.led_toggle))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[70]"></a>main</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = main &rArr; global_loop &rArr; global_ee &rArr; eeApp_handle_loop &rArr; eeApp_ds1307_write &rArr; ee24_write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_loop
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[199]"></a>number_decre</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, temp_button_app.o(i.number_decre))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_button_decre_fast
</UL>

<P><STRONG><a name="[19b]"></a>number_incre</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, temp_button_app.o(i.number_incre))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_button_incre_fast
</UL>

<P><STRONG><a name="[f2]"></a>rtc_button_decre_fast</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, ds1307_button_app.o(i.rtc_button_decre_fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc_button_decre_fast
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_edit_decre
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;date_edit_decre
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_buttonApp_Fast
</UL>

<P><STRONG><a name="[194]"></a>rtc_button_incre_fast</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, ds1307_button_app.o(i.rtc_button_incre_fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc_button_incre_fast
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_edit_incre
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;date_edit_incre
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Fast
</UL>

<P><STRONG><a name="[1a1]"></a>rtc_button_slow</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, ds1307_button_app.o(i.rtc_button_slow))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Slow
</UL>

<P><STRONG><a name="[132]"></a>tempLcdApp_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, temp_lcd_app.o(i.tempLcdApp_init))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[150]"></a>tempLcdApp_type_sensor</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, temp_lcd_app.o(i.tempLcdApp_type_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tempLcdApp_type_sensor &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_3_choose
</UL>

<P><STRONG><a name="[149]"></a>tempLcdApp_update_basic_tempCur</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, temp_lcd_app.o(i.tempLcdApp_update_basic_tempCur))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tempLcdApp_update_basic_tempCur &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_0
</UL>

<P><STRONG><a name="[151]"></a>tempLcdApp_update_edit_number_sensor</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, temp_lcd_app.o(i.tempLcdApp_update_edit_number_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tempLcdApp_update_edit_number_sensor &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_4_choose
</UL>

<P><STRONG><a name="[14f]"></a>tempLcdApp_update_edit_temp_set</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, temp_lcd_app.o(i.tempLcdApp_update_edit_temp_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tempLcdApp_update_edit_temp_set &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_2_choose
</UL>

<P><STRONG><a name="[14e]"></a>tempLcdApp_update_tempCur</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, temp_lcd_app.o(i.tempLcdApp_update_tempCur))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tempLcdApp_update_tempCur &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_3_1_choose
</UL>

<P><STRONG><a name="[f3]"></a>temp_button_decre_fast</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, temp_button_app.o(i.temp_button_decre_fast))
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;number_decre
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_buttonApp_Fast
</UL>

<P><STRONG><a name="[19a]"></a>temp_button_incre_fast</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, temp_button_app.o(i.temp_button_incre_fast))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;number_incre
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Fast
</UL>

<P><STRONG><a name="[1a3]"></a>temp_button_slow</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, temp_button_app.o(i.temp_button_slow))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Slow
</UL>

<P><STRONG><a name="[19d]"></a>uartLcdApp_edit_baudrate</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, uart_lcd_app.o(i.uartLcdApp_edit_baudrate))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_edit_update_baudrate
</UL>

<P><STRONG><a name="[155]"></a>uartLcdApp_edit_update_baudrate</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, uart_lcd_app.o(i.uartLcdApp_edit_update_baudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = uartLcdApp_edit_update_baudrate &rArr; uartLcdApp_update_baudrate &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_update_baudrate
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_edit_baudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_4_choose
</UL>

<P><STRONG><a name="[136]"></a>uartLcdApp_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uart_lcd_app.o(i.uartLcdApp_init))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[19c]"></a>uartLcdApp_update_baudrate</STRONG> (Thumb, 280 bytes, Stack size 64 bytes, uart_lcd_app.o(i.uartLcdApp_update_baudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = uartLcdApp_update_baudrate &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartLcdApp_edit_update_baudrate
</UL>

<P><STRONG><a name="[152]"></a>uartLcdApp_update_data_receive</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, uart_lcd_app.o(i.uartLcdApp_update_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uartLcdApp_update_data_receive &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_1_choose
</UL>

<P><STRONG><a name="[153]"></a>uartLcdApp_update_data_send</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, uart_lcd_app.o(i.uartLcdApp_update_data_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uartLcdApp_update_data_send &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_2_choose
</UL>

<P><STRONG><a name="[154]"></a>uartLcdApp_update_state_conncet</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, uart_lcd_app.o(i.uartLcdApp_update_state_conncet))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = uartLcdApp_update_state_conncet &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenuApp_content_1_4_3_choose
</UL>

<P><STRONG><a name="[f4]"></a>uart_button_decre_fast</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, uart_button_app.o(i.uart_button_decre_fast))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_buttonApp_Fast
</UL>

<P><STRONG><a name="[19f]"></a>uart_button_incre_fast</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uart_button_app.o(i.uart_button_incre_fast))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Fast
</UL>

<P><STRONG><a name="[1a4]"></a>uart_button_slow</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, uart_button_app.o(i.uart_button_slow))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_buttonApp_Slow
</UL>

<P><STRONG><a name="[135]"></a>uart_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(i.uart_init))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_init
</UL>

<P><STRONG><a name="[3a]"></a>up_buttonApp_Fast</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, button_app.o(i.up_buttonApp_Fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = up_buttonApp_Fast &rArr; AlarmApp_turn_off
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_button_incre_fast
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_button_incre_fast
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_button_incre_fast
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_set_up
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_button_incre_fast
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmApp_turn_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_app.o(i.buttonApp_init)
</UL>
<P><STRONG><a name="[3d]"></a>up_buttonApp_Keep</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_app.o(i.up_buttonApp_Keep))
<BR>[Address Reference Count : 1]<UL><LI> button_app.o(i.buttonApp_init)
</UL>
<P><STRONG><a name="[3c]"></a>up_buttonApp_Long_Slow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_app.o(i.up_buttonApp_Long_Slow))
<BR>[Address Reference Count : 1]<UL><LI> button_app.o(i.buttonApp_init)
</UL>
<P><STRONG><a name="[3b]"></a>up_buttonApp_Slow</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, button_app.o(i.up_buttonApp_Slow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = up_buttonApp_Slow
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_button_slow
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_button_slow
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_button_slow
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdMenu_set_choose
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_button_slow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_app.o(i.buttonApp_init)
</UL>
<P><STRONG><a name="[12a]"></a>up_button_handle_loop</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, button.o(i.up_button_handle_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = up_button_handle_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_button
</UL>

<P><STRONG><a name="[e0]"></a>up_button_set_handle_fast</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(i.up_button_set_handle_fast))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonApp_init
</UL>

<P><STRONG><a name="[e3]"></a>up_button_set_handle_keep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(i.up_button_set_handle_keep))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonApp_init
</UL>

<P><STRONG><a name="[e2]"></a>up_button_set_handle_long_slow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(i.up_button_set_handle_long_slow))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonApp_init
</UL>

<P><STRONG><a name="[e1]"></a>up_button_set_handle_slow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(i.up_button_set_handle_slow))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonApp_init
</UL>

<P><STRONG><a name="[1a5]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>

<P><STRONG><a name="[198]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_tempCur
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_basic_tempCur
</UL>

<P><STRONG><a name="[1a7]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadTemp
</UL>

<P><STRONG><a name="[1df]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[197]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_tempCur
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempLcdApp_update_basic_tempCur
</UL>

<P><STRONG><a name="[1a9]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[1a8]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
</UL>

<P><STRONG><a name="[1aa]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
</UL>

<P><STRONG><a name="[1a6]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[8d]"></a>__ARM_scalbnf</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, scalbnf.o(x$fpl$scalbnf))
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadTemp
</UL>

<P><STRONG><a name="[1ab]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c9]"></a>MX_ADC1_Init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, main.o(i.MX_ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MX_ADC1_Init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>MX_ADC2_Init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, main.o(i.MX_ADC2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MX_ADC2_Init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cc]"></a>MX_GPIO_Init</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cd]"></a>MX_TIM1_Init</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, main.o(i.MX_TIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM1_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>MX_TIM2_Init</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, main.o(i.MX_TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM2_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[c8]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f1xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
</UL>

<P><STRONG><a name="[97]"></a>I2C_MasterRequestRead</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, stm32f1xx_hal_i2c.o(i.I2C_MasterRequestRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_MasterRequestRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[99]"></a>I2C_MasterRequestWrite</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, stm32f1xx_hal_i2c.o(i.I2C_MasterRequestWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>

<P><STRONG><a name="[9d]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, stm32f1xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[9f]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, stm32f1xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[9b]"></a>I2C_WaitOnBTFFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnBTFFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitOnBTFFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>

<P><STRONG><a name="[96]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_IsDeviceReady
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterRequestWrite
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterRequestRead
</UL>

<P><STRONG><a name="[c7]"></a>I2C_WaitOnMasterAddressFlagUntilTimeout</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnMasterAddressFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterRequestWrite
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterRequestRead
</UL>

<P><STRONG><a name="[98]"></a>I2C_WaitOnRXNEFlagUntilTimeout</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnRXNEFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[9a]"></a>I2C_WaitOnTXEFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnTXEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitOnTXEFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[b3]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[b1]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[b2]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[c2]"></a>UART_SetConfig</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[c6]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32f1xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[dd]"></a>alarm_edit_decre</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ds1307_button_app.o(i.alarm_edit_decre))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_update_decre
</UL>

<P><STRONG><a name="[de]"></a>alarm_edit_incre</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ds1307_button_app.o(i.alarm_edit_incre))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_update_incre
</UL>

<P><STRONG><a name="[d8]"></a>alarm_update_decre</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ds1307_button_app.o(i.alarm_update_decre))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_edit_decre
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_button_decre_fast
</UL>

<P><STRONG><a name="[da]"></a>alarm_update_incre</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ds1307_button_app.o(i.alarm_update_incre))
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_edit_incre
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_button_incre_fast
</UL>

<P><STRONG><a name="[192]"></a>date_edit_decre</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ds1307_button_app.o(i.date_edit_decre))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_button_decre_fast
</UL>

<P><STRONG><a name="[196]"></a>date_edit_incre</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ds1307_button_app.o(i.date_edit_incre))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_button_incre_fast
</UL>

<P><STRONG><a name="[193]"></a>time_edit_decre</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ds1307_button_app.o(i.time_edit_decre))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_button_decre_fast
</UL>

<P><STRONG><a name="[195]"></a>time_edit_incre</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ds1307_button_app.o(i.time_edit_incre))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_button_incre_fast
</UL>

<P><STRONG><a name="[ff]"></a>ds1307App_lcd_edit_alarm</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_edit_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_4
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_3
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_2
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_1
</UL>

<P><STRONG><a name="[fa]"></a>ds1307App_lcd_update_alarm</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, ds1307_lcd_app.o(i.ds1307App_lcd_update_alarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ds1307App_lcd_update_alarm &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_4
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_3
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_2
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307App_lcd_update_edit_alarm_1
</UL>

<P><STRONG><a name="[db]"></a>alarm_read</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ee_app.o(i.alarm_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = alarm_read &rArr; ee24_read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee24_read
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeApp_alarm_read
</UL>

<P><STRONG><a name="[d4]"></a>alarmApp_find</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, alarm_app.o(i.alarmApp_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = alarmApp_find
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_set_number_call
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmApp_handle_loop
</UL>

<P><STRONG><a name="[18f]"></a>lcd_send_cmd</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lcd.o(i.lcd_send_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lcd_send_cmd &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_goto_xy
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[190]"></a>lcd_send_data</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lcd.o(i.lcd_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lcd_send_data &rArr; HAL_I2C_Master_Transmit &rArr; I2C_MasterRequestWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send_string
</UL>

<P><STRONG><a name="[114]"></a>DS1307_DecodeBCD</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ds1307.o(i.DS1307_DecodeBCD))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_year
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_second
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_month
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_minute
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_hour
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_day_of_week
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_get_date
</UL>

<P><STRONG><a name="[117]"></a>DS1307_EncodeBCD</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ds1307.o(i.DS1307_EncodeBCD))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_year
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_second
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_month
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_minute
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_hour
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_day_of_week
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds1307_set_day
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
